// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */


 // This solution is actually very similar to Bit.hdl

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
    Inc16(in=feedback, out=plus);

    // else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
    // else out[t+1] = out[t]
    Mux16(a=feedback,b=plus,sel=inc,out=w0);
    // else if (load[t] == 1)  out[t+1] = in[t]
    Mux16(a=w0,b=in,sel=load,out=w1);
    // if (reset[t] == 1) out[t+1] = 0 
    Mux16(a=w1,b=false,sel=reset,out=cout);

    // Read t-1 from register and feedback into combination logicx
    // Also store current computed value for next cycle
    Register(in=cout, load=true, out=out, out=feedback);
}
